# MySQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=docker-compose ?? ??
#spring.datasource.username=docker-compose ?? ??
#spring.datasource.password=docker-compose ?? ??

# JPA
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update

# SERVLET
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

#SpringDoc
springdoc.swagger-ui.path=/swagger

# JWT
#jwt.jwt-secret=docker-compose ?? ??
#jwt.refresh-secret=docker-compose ?? ??
#jwt.jwt-expiration-time=docker-compose ?? ??
#jwt.refresh-expiration-time=docker-compose ?? ??
jwt.token-prefix=Bearer
jwt.jwt-header-string=Authorization
jwt.refresh-header-string=Refresh


#FTP
ftp.server=${FTP_SERVER}
ftp.port=${FTP_PORT}
ftp.username=${FTP_USERNAME}
ftp.password=${FTP_PASSWORD}
ftp.directory=${FTP_DIRECTORY}

#EMAIL
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth= true
spring.mail.properties.mail.smtp.starttls.enable= true
spring.mail.properties.mail.smtp.starttls.required= true
spring.mail.properties.mail.smtp.connectiontimeout= 5000
spring.mail.properties.mail.smtp.timeout= 5000
spring.mail.properties.mail.smtp.writetimeout= 5000
spring.mail.auth-code-expiration-millis= 600000


# api
service.key=${TOUR_API_SERVICE_KEY}

#REDIS
#spring.data.redis.host=docker-compose ?? ??
#spring.data.redis.port=docker-compose ?? ??